activation_velocities = {22: 11,
 23: 11,
 24: 11,
 25: 10,
 26: 11,
 27: 11,
 28: 11,
 29: 11,
 30: 11,
 31: 11,
 32: 11,
 33: 11,
 34: 10,
 35: 13,
 36: 10,
 37: 11,
 38: 11,
 39: 11,
 40: 10,
 41: 11,
 42: 8,
 43: 10,
 44: 9,
 45: 11,
 46: 7,
 47: 25,
 48: 30,
 49: 30,
 50: 30,
 51: 30,
 52: 27,
 53: 26,
 54: 25,
 55: 29,
 56: 25,
 57: 32,
 58: 27,
 59: 29,
 60: 30,
 61: 25,
 62: 27,
 63: 31,
 64: 32,
 65: 23,
 66: 23,
 67: 27,
 68: 25,
 69: 30,
 70: 24,
 71: 30,
 72: 26,
 73: 24,
 74: 21,
 75: 14,
 76: 12,
 77: 14,
 78: 11,
 79: 16,
 80: 10,
 81: 13,
 82: 11,
 83: 11,
 84: 11,
 85: 11,
 86: 12,
 87: 12,
 88: 11,
 89: 17,
 90: 12,
 91: 12,
 92: 11,
 93: 11,
 94: 11,
 95: 18,
 96: 12,
 97: 12,
 98: 11,
 99: 11,
 100: 11,
 101: 11,
 102: 11,
 103: 11,
 104: 11,
 105: 11,
 106: 11,
 107: 15,
 108: 14}


def get_minimum_velocities_for_all_keys(floor_boost):
    boost_percent = floor_boost / 100
    boosted = {key: vel + int(vel * boost_percent) for key, vel in activation_velocities.items()}
    return boosted